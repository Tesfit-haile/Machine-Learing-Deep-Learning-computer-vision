import cv2import numpy as npdef nothing(x):    print(x)# cap = cv2.VideoCapture(0) for videocv2.namedWindow('Tracking')cv2.createTrackbar('LH', 'Tracking', 0, 255, nothing)cv2.createTrackbar('LS', 'Tracking', 0, 255, nothing)cv2.createTrackbar('LV', 'Tracking', 0, 255, nothing)cv2.createTrackbar('UH', 'Tracking', 255, 255, nothing)cv2.createTrackbar('US', 'Tracking', 255, 255, nothing)cv2.createTrackbar('UV', 'Tracking', 255, 255, nothing)while True:    # success, img = cap.read() for video    img = cv2.imread('Photos/smarties.png')    hsv_img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)    """ we are adjusting the threshold the image for the blue color only with variable below.... """    """ it is not ease to detect those number below THAT IS WHY WE USE TRACKING .... """    # l_b = np.array([100, 100, 50])  # lower limit of the color u want to detect    # u_b = np.array([130, 255, 255])  # upper limit of the color u want to detect    l_h = cv2.getTrackbarPos('LH', 'Tracking')    l_s = cv2.getTrackbarPos('LS', 'Tracking')    l_v = cv2.getTrackbarPos('LV', 'Tracking')    u_h = cv2.getTrackbarPos('UH', 'Tracking')    u_s = cv2.getTrackbarPos('US', 'Tracking')    u_v = cv2.getTrackbarPos('UV', 'Tracking')    l_b = np.array([l_h, l_s, l_v])  # lower limit of the color u want to detect    u_b = np.array([u_h, u_s, u_v])  # upper limit of the color u want to detect    mask = cv2.inRange(hsv_img, l_b, u_b)    detected_img = cv2.bitwise_and(img, img, mask=mask)    cv2.imshow('HSV', hsv_img)    cv2.imshow('mask', mask)    cv2.imshow(' detected_img', detected_img)    if cv2.waitKey(1) & 0xFF == 27:        break# cap.release()cv2.destroyAllWindows()